{
  "version": 3,
  "sources": ["utils/urlMatchPattern.js", "utils/inject.js", "background.js"],
  "sourcesContent": ["export function urlMatchesPattern(url, pattern) {\n  try {\n    if (!url || !pattern) return false;\n    if (pattern === url) return true;\n\n    // universal wildcard\n    if (pattern === \"*://*/*\") return true;\n\n    // Default if nothing provided\n    if (!pattern.includes(\"://\")) {\n      pattern = \"*://\" + pattern;\n    }\n\n    const [patternScheme, patternRest] = pattern.split(\"://\");\n    const [patternHost, ...pathParts] = patternRest.split(\"/\");\n    const patternPath = \"/\" + pathParts.join(\"/\");\n\n    const urlObj = new URL(url);\n    const urlScheme = urlObj.protocol.slice(0, -1); // \"http:\" -> \"http\"\n    const urlHost = urlObj.hostname;\n    const urlPath = urlObj.pathname;\n\n    // === SCHEME MATCHING (Support for wildcards like http*, https?) ===\n    const schemeRegex = new RegExp(\n      \"^\" + patternScheme.replace(/\\*/g, \".*\") + \"$\"\n    );\n    if (!schemeRegex.test(urlScheme)) return false;\n\n    // === HOST MATCHING ===\n    if (patternHost === \"*\") {\n      // Any host\n    } else if (patternHost.startsWith(\"*.\")) {\n      const domain = patternHost.slice(2);\n      if (!(urlHost === domain || urlHost.endsWith(\".\" + domain))) return false;\n    } else if (patternHost.includes(\"*\")) {\n      const hostRegex = new RegExp(\n        \"^\" + patternHost.replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\") + \"$\"\n      );\n      if (!hostRegex.test(urlHost)) return false;\n    } else {\n      if (urlHost !== patternHost) return false;\n    }\n\n    // === PATH MATCHING ===\n    if ([\"/\", \"/*\"].includes(patternPath)) return true;\n    if (patternPath.endsWith(\"/**\")) {\n      const base = patternPath.slice(0, -3);\n      return urlPath === base || urlPath.startsWith(base);\n    }\n\n    // Convert wildcard path to regex\n    const segments = patternPath.split(\"/\").filter(Boolean);\n    const regexParts = [\"^\"];\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      if (segment === \"**\") {\n        regexParts.push(\"(?:\\\\/.*)?\");\n      } else {\n        const segmentRegex = segment\n          .replace(/\\*/g, \"[^/]*\")\n          .replace(/\\./g, \"\\\\.\");\n        regexParts.push(\"\\\\/\" + segmentRegex);\n      }\n    }\n\n    regexParts.push(\"/?$\"); // Optional trailing slash\n    const pathRegex = new RegExp(regexParts.join(\"\"));\n    return pathRegex.test(urlPath);\n  } catch (e) {\n    console.warn(\"URL matching error:\", e);\n    return false;\n  }\n}\n\n/**\n * Generate a URL match pattern based on a base URL and desired scope.\n * @param {string} baseUrl - The base URL provided by the user (e.g. https://example.com).\n * @param {\"exact\"|\"domain\"|\"subdomain\"} scope - The scope of the pattern:\n *   exact      \u2013 only the exact page.\n *   domain     \u2013 any path on the same host.\n *   subdomain  \u2013 any sub-domain and any path.\n * @returns {string|null} A match pattern string suitable for storage or null if invalid.\n */\nexport function generateUrlMatchPattern(baseUrl, scope = \"domain\") {\n  try {\n    if (!baseUrl) return null;\n    // Ensure we have a scheme\n    if (!/^https?:\\/\\//i.test(baseUrl)) {\n      baseUrl = \"https://\" + baseUrl.replace(/^\\/*/, \"\");\n    }\n    const { protocol, hostname } = new URL(baseUrl);\n\n    // Normalise protocol (strip trailing :) and add wildcard support\n    const scheme = protocol.replace(\":\", \"\");\n\n    let hostPart = hostname;\n    switch (scope) {\n      case \"exact\":\n        return `${scheme}://${hostPart}`; // Caller should append path manually if needed\n      case \"domain\":\n        return `${scheme}://${hostPart}/*`;\n      case \"subdomain\": {\n        // Derive eTLD+1 naive approach (last two labels) for simplicity\n        const parts = hostPart.split(\".\");\n        if (parts.length > 2) {\n          hostPart = parts.slice(-2).join(\".\");\n        }\n        return `${scheme}://*.${hostPart}/*`;\n      }\n      default:\n        return `${scheme}://${hostPart}/*`;\n    }\n  } catch (e) {\n    console.warn(\"Failed to generate match pattern:\", e);\n    return null;\n  }\n}\n", "/* global chrome */\n\n// Constants\nconst INJECTION_TYPES = Object.freeze({\n  DOCUMENT_START: \"document_start\",\n  DOCUMENT_END: \"document_end\",\n  DOCUMENT_IDLE: \"document_idle\",\n});\n\nconst EXECUTION_WORLDS = Object.freeze({\n  MAIN: \"MAIN\",\n  ISOLATED: \"ISOLATED\",\n});\n\n// ==================================================\n// CORE CLASSES\n// ==================================================\nclass GMBridge {\n  constructor(scriptId, extensionId) {\n    this.scriptId = scriptId;\n    this.extensionId = extensionId;\n    this.messageIdCounter = 0;\n    this.pendingPromises = new Map();\n    this.isFirefox = typeof InstallTrigger !== 'undefined';\n    this.setupMessageListener();\n  }\n\n  setupMessageListener() {\n    if (this.isFirefox) return; // No window.postMessage in Firefox\n    window.addEventListener(\"message\", (event) => {\n      if (!this.isValidResponse(event)) return;\n      const { messageId, error, result } = event.data;\n      const promise = this.pendingPromises.get(messageId);\n      if (!promise) return;\n      if (error) {\n        promise.reject(new Error(error));\n      } else {\n        promise.resolve(result);\n      }\n      this.pendingPromises.delete(messageId);\n    });\n  }\n\n  isValidResponse(event) {\n    return (\n      event.source === window &&\n      event.data?.type === \"GM_API_RESPONSE\" &&\n      event.data.extensionId === this.extensionId &&\n      this.pendingPromises.has(event.data.messageId)\n    );\n  }\n\n  call(action, payload = {}) {\n    if (this.isFirefox) {\n      // Directly call background in Firefox\n      return new Promise((resolve, reject) => {\n        try {\n          chrome.runtime.sendMessage(\n            {\n              type: \"GM_API_REQUEST\",\n              payload: { action, ...payload },\n            },\n            (response) => {\n              if (chrome.runtime.lastError) {\n                reject(new Error(chrome.runtime.lastError.message));\n              } else if (response?.error) {\n                reject(new Error(response.error));\n              } else {\n                resolve(response?.result);\n              }\n            }\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } else {\n      // Chromium: use window.postMessage\n      return new Promise((resolve, reject) => {\n        const messageId = `gm_${this.scriptId}_${this.messageIdCounter++}`;\n        this.pendingPromises.set(messageId, { resolve, reject });\n        window.postMessage(\n          {\n            type: \"GM_API_REQUEST\",\n            extensionId: this.extensionId,\n            messageId,\n            action,\n            payload,\n          },\n          \"*\"\n        );\n      });\n    }\n  }\n}\n\nclass GMValueManager {\n  constructor(bridge) {\n    this.bridge = bridge;\n    this.cache = new Map();\n  }\n\n  async setValue(name, value) {\n    const resolvedValue = value instanceof Promise ? await value : value;\n    this.cache.set(name, resolvedValue);\n    return this.bridge.call(\"setValue\", { name, value: resolvedValue });\n  }\n\n  getValue(name, defaultValue) {\n    if (this.cache.has(name)) {\n      return this.cache.get(name);\n    }\n\n    // Async fetch to update cache for next call\n    this.bridge\n      .call(\"getValue\", { name, defaultValue })\n      .then((value) => this.cache.set(name, value))\n      .catch((err) => console.warn(\"Failed to fetch GM value:\", err));\n\n    return defaultValue;\n  }\n\n  async deleteValue(name) {\n    this.cache.delete(name);\n    return this.bridge.call(\"deleteValue\", { name });\n  }\n\n  listValues() {\n    return Array.from(this.cache.keys());\n  }\n\n  initializeCache(initialValues = {}) {\n    this.cache.clear();\n    Object.entries(initialValues).forEach(([key, value]) => {\n      this.cache.set(key, value);\n    });\n  }\n}\n\nclass GMAPIRegistry {\n  constructor(bridge, valueManager, resourceManager) {\n    this.bridge = bridge;\n    this.valueManager = valueManager;\n    this.resourceManager = resourceManager;\n    this.menuCommands = [];\n  }\n\n  registerAll(enabledApis) {\n    this.initializeGMNamespace();\n    this.registerStorageAPIs(enabledApis);\n    this.registerUIAPIs(enabledApis);\n    this.registerNetworkAPIs(enabledApis);\n    this.registerUtilityAPIs(enabledApis);\n    this.registerResourceAPIs(enabledApis);\n  }\n\n  initializeGMNamespace() {\n    if (typeof window.GM === \"undefined\") {\n      window.GM = {};\n    }\n  }\n\n  registerStorageAPIs(enabledApis) {\n    if (enabledApis.gmSetValue) {\n      const setValue = (name, value) => this.valueManager.setValue(name, value);\n      window.GM_setValue = setValue;\n      window.GM.setValue = setValue;\n    }\n\n    if (enabledApis.gmGetValue) {\n      const getValue = (name, defaultValue) =>\n        this.valueManager.getValue(name, defaultValue);\n      window.GM_getValue = getValue;\n      window.GM.getValue = getValue;\n    }\n\n    if (enabledApis.gmDeleteValue) {\n      const deleteValue = (name) => this.valueManager.deleteValue(name);\n      window.GM_deleteValue = deleteValue;\n      window.GM.deleteValue = deleteValue;\n    }\n\n    if (enabledApis.gmListValues) {\n      const listValues = () => this.valueManager.listValues();\n      window.GM_listValues = listValues;\n      window.GM.listValues = listValues;\n    }\n  }\n\n  registerUIAPIs(enabledApis) {\n    if (enabledApis.gmOpenInTab) {\n      const openInTab = (url, options = {}) =>\n        this.bridge.call(\"openInTab\", { url, options });\n      window.GM_openInTab = openInTab;\n      window.GM.openInTab = openInTab;\n    }\n\n    if (enabledApis.gmNotification) {\n      const notification = (textOrDetails, titleOrOnDone, image) => {\n        const details = this.normalizeNotificationDetails(\n          textOrDetails,\n          titleOrOnDone,\n          image\n        );\n        const cloneableDetails = this.removeNonCloneableProperties(details);\n        return this.bridge.call(\"notification\", { details: cloneableDetails });\n      };\n      window.GM_notification = notification;\n      window.GM.notification = notification;\n    }\n\n    if (enabledApis.gmRegisterMenuCommand) {\n      const registerMenuCommand = (caption, onClick, accessKey) => {\n        return this.registerMenuCommand(caption, onClick, accessKey);\n      };\n      window.GM_registerMenuCommand = registerMenuCommand;\n      window.GM.registerMenuCommand = registerMenuCommand;\n    }\n  }\n\n  registerNetworkAPIs(enabledApis) {\n    if (enabledApis.gmXmlHttpRequest) {\n      const xmlHttpRequest = (details = {}) =>\n        this.createXMLHttpRequest(details);\n      window.GM_xmlHttpRequest = xmlHttpRequest;\n      window.GM.xmlHttpRequest = xmlHttpRequest;\n      // Alias with lowercase 'h' for widespread script compatibility\n      window.GM_xmlhttpRequest = xmlHttpRequest;\n      window.GM.xmlhttpRequest = xmlHttpRequest;\n    }\n\n    if (enabledApis.gmSetClipboard) {\n      const setClipboard = (data, type) =>\n        this.bridge.call(\"setClipboard\", { data, type });\n      window.GM_setClipboard = setClipboard;\n      window.GM.setClipboard = setClipboard;\n    }\n  }\n\n  registerUtilityAPIs(enabledApis) {\n    if (enabledApis.gmAddStyle) {\n      const addStyle = (css) => this.addStyleToDocument(css);\n      window.GM_addStyle = addStyle;\n      window.GM.addStyle = addStyle;\n    }\n  }\n\n  registerResourceAPIs(enabledApis) {\n    if (enabledApis.gmGetResourceText) {\n      const getResourceText = (resourceName) =>\n        this.resourceManager.getText(resourceName);\n      window.GM_getResourceText = getResourceText;\n      window.GM.getResourceText = getResourceText;\n    }\n\n    if (enabledApis.gmGetResourceURL) {\n      const getResourceURL = (resourceName) =>\n        this.resourceManager.getURL(resourceName);\n      window.GM_getResourceURL = getResourceURL;\n      window.GM.getResourceURL = getResourceURL;\n    }\n  }\n\n  // Helper methods\n  normalizeNotificationDetails(textOrDetails, titleOrOnDone, image) {\n    return typeof textOrDetails === \"object\" && textOrDetails !== null\n      ? { ...textOrDetails }\n      : { text: textOrDetails, title: titleOrOnDone, image };\n  }\n\n  removeNonCloneableProperties(obj) {\n    return Object.fromEntries(\n      Object.entries(obj).filter(([, value]) => typeof value !== \"function\")\n    );\n  }\n\n  createXMLHttpRequest(details) {\n    if (typeof details !== \"object\") {\n      throw new Error(\"GM_xmlHttpRequest: details must be an object\");\n    }\n\n    const { callbacks, cloneableDetails } =\n      this.separateCallbacksFromDetails(details);\n\n    return this.bridge\n      .call(\"xmlHttpRequest\", { details: cloneableDetails })\n      .then((response) => {\n        if (callbacks.onload) {\n          try {\n            callbacks.onload(response);\n          } catch (error) {\n            console.error(\"GM_xmlHttpRequest onload error:\", error);\n          }\n        }\n        return response;\n      })\n      .catch((error) => {\n        if (callbacks.onerror) {\n          try {\n            callbacks.onerror(error);\n          } catch (callbackError) {\n            console.error(\n              \"GM_xmlHttpRequest onerror callback failed:\",\n              callbackError\n            );\n          }\n        }\n        throw error;\n      });\n  }\n\n  separateCallbacksFromDetails(details) {\n    const callbacks = {};\n    const cloneableDetails = {};\n\n    Object.entries(details).forEach(([key, value]) => {\n      if (typeof value === \"function\") {\n        callbacks[key] = value;\n      } else {\n        cloneableDetails[key] = value;\n      }\n    });\n\n    return { callbacks, cloneableDetails };\n  }\n\n  addStyleToDocument(css) {\n    if (typeof css !== \"string\") return null;\n\n    const style = document.createElement(\"style\");\n    style.textContent = css;\n\n    const target = document.head || document.documentElement || document.body;\n    if (target) {\n      target.appendChild(style);\n    }\n\n    return style;\n  }\n\n  registerMenuCommand(caption, onClick, accessKey) {\n    if (typeof caption !== \"string\" || typeof onClick !== \"function\") {\n      console.warn(\n        \"GM_registerMenuCommand: Expected (string caption, function onClick, [string accessKey])\"\n      );\n      return null;\n    }\n\n    const commandId = this.generateCommandId();\n    const command = { commandId, caption, onClick, accessKey };\n\n    this.menuCommands.push(command);\n    this.exposeMenuCommand(command);\n\n    console.log(\n      `CodeTweak: Registered GM menu command '${caption}' (id: ${commandId})`\n    );\n    return commandId;\n  }\n\n  generateCommandId() {\n    return `gm_menu_${Date.now()}_${Math.random()\n      .toString(36)\n      .substring(2, 8)}`;\n  }\n\n  exposeMenuCommand(command) {\n    window.__gmMenuCommands = window.__gmMenuCommands || [];\n    window.__gmMenuCommands.push(command);\n  }\n}\n\n/**\n * Manages script resources (text content and URLs)\n */\nclass ResourceManager {\n  constructor(resourceContents = {}, resourceURLs = {}) {\n    this.contents = new Map(Object.entries(resourceContents));\n    this.urls = new Map(Object.entries(resourceURLs));\n  }\n\n  getText(resourceName) {\n    return this.contents.get(resourceName) || null;\n  }\n\n  getURL(resourceName) {\n    return this.urls.get(resourceName) || null;\n  }\n\n  static fromScript(script) {\n    const resourceURLs = {};\n\n    if (Array.isArray(script.resources)) {\n      script.resources.forEach((resource) => {\n        resourceURLs[resource.name] = resource.url;\n      });\n    }\n\n    return new ResourceManager(script.resourceContents || {}, resourceURLs);\n  }\n}\n\n/**\n * Handles external script loading with fallback strategies\n */\nclass ExternalScriptLoader {\n  constructor() {\n    this.loadedScripts = new Set();\n  }\n\n  async loadScript(url) {\n    if (this.loadedScripts.has(url)) {\n      return; // Already loaded\n    }\n\n    try {\n      await this.injectScriptTag(url);\n      this.loadedScripts.add(url);\n    } catch (error) {\n      console.error(`Failed to load external script: ${url}`, error);\n      throw error;\n    }\n  }\n\n  async loadScripts(urls) {\n    if (!Array.isArray(urls) || urls.length === 0) {\n      return;\n    }\n\n    for (const url of urls) {\n      await this.loadScript(url);\n    }\n  }\n\n  async injectScriptTag(url) {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n\n      // Trusted Types compliance\n      let trustedSrc = url;\n      if (window.trustedTypes && window.trustedTypes.createPolicy) {\n        try {\n          if (!window.__ctTrustedScriptURLPolicy) {\n            window.__ctTrustedScriptURLPolicy =\n              window.trustedTypes.createPolicy(\"codetweak\", {\n                createScriptURL: (input) => input,\n              });\n          }\n          trustedSrc = window.__ctTrustedScriptURLPolicy.createScriptURL(url);\n        } catch (_e) {\n          console.error(\"Failed to create trusted script URL:\", _e);\n          console.warn(\"Falling back to raw URL.\");\n          // ignore, fall back to raw URL\n          trustedSrc = url;\n        }\n      }\n\n      script.src = trustedSrc;\n      script.async = false; // Preserve execution order\n      script.onload = resolve;\n      script.onerror = () =>\n        reject(new Error(`Failed to load external script: ${url}`));\n      (document.head || document.documentElement).appendChild(script);\n    });\n  }\n}\n\n// ==================================================\n// SCRIPT EXECUTORS\n// ==================================================\n\nfunction createMainWorldExecutor(\n  userCode,\n  scriptId,\n  enabledApis,\n  resourceContents,\n  resourceURLs,\n  extensionId,\n  initialValues,\n  requiredUrls,\n  gmInfo\n) {\n  // Prevent re-execution\n  window._executedScriptIds = window._executedScriptIds || new Set();\n  if (window._executedScriptIds.has(scriptId)) {\n    console.log(`CodeTweak: Script ${scriptId} already executed`);\n    return;\n  }\n  window._executedScriptIds.add(scriptId);\n\n  console.log(`CodeTweak: Executing script ${scriptId} in main world`);\n\n  // Initialize components\n  const bridge = new GMBridge(scriptId, extensionId);\n  const valueManager = new GMValueManager(bridge);\n  const resourceManager = new ResourceManager(resourceContents, resourceURLs);\n  const apiRegistry = new GMAPIRegistry(bridge, valueManager, resourceManager);\n  const scriptLoader = new ExternalScriptLoader();\n\n  // Setup\n  valueManager.initializeCache(initialValues);\n  apiRegistry.registerAll(enabledApis);\n\n  // Expose GM_info (read-only)\n  try {\n    const desc = Object.getOwnPropertyDescriptor(window, \"GM_info\");\n    if (!desc || desc.configurable) {\n      Object.defineProperty(window, \"GM_info\", {\n        value: Object.freeze(gmInfo || {}),\n        writable: false,\n        configurable: false,\n      });\n      window.GM = window.GM || {};\n      window.GM.info = window.GM_info;\n    } else {\n      window.GM = window.GM || {};\n      window.GM.info = window.GM_info;\n    }\n  } catch (e) {\n    console.warn(\"CodeTweak: Unable to define GM_info\", e);\n  }\n\n  // Execute user script\n  executeUserScriptWithDependencies(\n    userCode,\n    scriptId,\n    requiredUrls,\n    scriptLoader\n  );\n}\n\n/**\n * Executes user scripts in the isolated world context\n */\nfunction createIsolatedWorldExecutor(\n  userCode,\n  scriptId,\n  enabledApis,\n  resourceContents,\n  resourceURLs,\n  initialValues,\n  requiredUrls,\n  gmInfo\n) {\n  // Prevent re-execution\n  window._executedScriptIds = window._executedScriptIds || new Set();\n  if (window._executedScriptIds.has(scriptId)) {\n    console.log(`CodeTweak: Script ${scriptId} already executed (isolated)`);\n    return;\n  }\n  window._executedScriptIds.add(scriptId);\n\n  console.log(`CodeTweak: Executing script ${scriptId} in ISOLATED world`);\n\n  // Create direct background bridge\n  const backgroundBridge = {\n    call: (action, payload = {}) => {\n      return new Promise((resolve, reject) => {\n        try {\n          chrome.runtime.sendMessage(\n            {\n              type: \"GM_API_REQUEST\",\n              payload: { action, ...payload },\n            },\n            (response) => {\n              if (chrome.runtime.lastError) {\n                reject(new Error(chrome.runtime.lastError.message));\n              } else if (response?.error) {\n                reject(new Error(response.error));\n              } else {\n                resolve(response?.result);\n              }\n            }\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n  };\n\n  // Initialize components\n  const valueManager = new GMValueManager(backgroundBridge);\n  const resourceManager = new ResourceManager(resourceContents, resourceURLs);\n  const apiRegistry = new GMAPIRegistry(\n    backgroundBridge,\n    valueManager,\n    resourceManager\n  );\n  const scriptLoader = new ExternalScriptLoader();\n\n  // Setup\n  valueManager.initializeCache(initialValues);\n  apiRegistry.registerAll(enabledApis);\n\n  // Expose GM_info (read-only)\n  try {\n    const desc = Object.getOwnPropertyDescriptor(window, \"GM_info\");\n    if (!desc || desc.configurable) {\n      Object.defineProperty(window, \"GM_info\", {\n        value: Object.freeze(gmInfo || {}),\n        writable: false,\n        configurable: false,\n      });\n      window.GM = window.GM || {};\n      window.GM.info = window.GM_info;\n    } else {\n      window.GM = window.GM || {};\n      window.GM.info = window.GM_info;\n    }\n  } catch (e) {\n    console.warn(\"CodeTweak: Unable to define GM_info\", e);\n  }\n\n  // Execute user script\n  executeUserScriptWithDependencies(\n    userCode,\n    scriptId,\n    requiredUrls,\n    scriptLoader\n  );\n}\n\n/**\n * Executes user script with dependency loading\n */\nasync function executeUserScriptWithDependencies(\n  userCode,\n  scriptId,\n  requiredUrls,\n  scriptLoader\n) {\n  try {\n    // Load external dependencies first\n    await scriptLoader.loadScripts(requiredUrls);\n\n    // Execute user script using a CSP-compliant blob URL instead of Function()\n    const blob = new Blob([userCode], { type: \"text/javascript\" });\n    const blobUrl = URL.createObjectURL(blob);\n\n    await new Promise((resolve, reject) => {\n      const scriptEl = document.createElement(\"script\");\n\n      // Trusted Types compliance for blob URL\n      let trustedSrc = blobUrl;\n      if (window.trustedTypes && window.trustedTypes.createPolicy) {\n        try {\n          if (!window.__ctTrustedScriptURLPolicy) {\n            window.__ctTrustedScriptURLPolicy =\n              window.trustedTypes.createPolicy(\"codetweak\", {\n                createScriptURL: (input) => input,\n              });\n          }\n          trustedSrc =\n            window.__ctTrustedScriptURLPolicy.createScriptURL(blobUrl);\n        } catch (_e) {\n          console.error(\"Failed to create trusted script URL:\", _e);\n          console.warn(\"Falling back to raw URL.\");\n          trustedSrc = blobUrl;\n        }\n      }\n\n      scriptEl.src = trustedSrc;\n      scriptEl.async = false; // Preserve execution order\n      scriptEl.onload = () => {\n        URL.revokeObjectURL(blobUrl);\n        resolve();\n      };\n      scriptEl.onerror = (event) => {\n        URL.revokeObjectURL(blobUrl);\n        reject(\n          new Error(\n            `Failed to execute user script ${scriptId}: ${\n              event?.message || \"unknown error\"\n            }`\n          )\n        );\n      };\n      (document.head || document.documentElement || document.body).appendChild(\n        scriptEl\n      );\n    });\n  } catch (error) {\n    console.error(`CodeTweak: Error executing user script ${scriptId}:`, error);\n  }\n}\n\n// ==================================================\n// INJECTION SYSTEM\n// ==================================================\n\n/**\n * Main script injection orchestrator\n */\nclass ScriptInjector {\n  constructor() {\n    this.executedScripts = new Map();\n  }\n\n  async injectScript(tabId, script, settings = {}) {\n    try {\n      const tab = await chrome.tabs.get(tabId);\n      if (!tab || !chrome.runtime?.id) {\n        console.warn(\n          `CodeTweak: Tab or extension runtime not available for ${script?.name}`\n        );\n        return false;\n      }\n\n      const config = this.prepareScriptConfig(script);\n      const injected = await this.tryInjectInBothWorlds(tabId, config);\n\n      if (injected && settings.showNotifications) {\n        this.showNotification(tabId, script.name);\n      }\n\n      return injected;\n    } catch (error) {\n      console.warn(\n        `CodeTweak: Failed to inject script ${script?.name}:`,\n        error\n      );\n      return false;\n    }\n  }\n\n  async tryInjectInBothWorlds(tabId, config) {\n    // Try MAIN world first (preferred)\n    try {\n      await this.injectInWorld(tabId, config, EXECUTION_WORLDS.MAIN);\n      return true;\n    } catch (error) {\n      console.warn(\n        `CodeTweak: MAIN world injection failed, trying ISOLATED world:`,\n        error?.message\n      );\n    }\n\n    // Fallback to ISOLATED world\n    try {\n      await this.injectInWorld(tabId, config, EXECUTION_WORLDS.ISOLATED);\n      return true;\n    } catch (error) {\n      console.error(`CodeTweak: ISOLATED world injection also failed:`, error);\n      return false;\n    }\n  }\n\n  async injectInWorld(tabId, config, world) {\n    // Ensure core GM classes are available in the target execution world first\n    await chrome.scripting.executeScript({\n      target: { tabId },\n      world,\n      files: [\n        \"utils/gm_core.js\", // contains GMBridge, GMValueManager, GMAPIRegistry, etc.\n      ],\n    });\n\n    const executor =\n      world === EXECUTION_WORLDS.MAIN\n        ? createMainWorldExecutor\n        : createIsolatedWorldExecutor;\n\n    await chrome.scripting.executeScript({\n      target: { tabId },\n      world,\n      func: executor,\n      args: [\n        config.code,\n        config.id,\n        config.enabledApis,\n        config.resourceContents,\n        config.resourceURLs,\n        chrome.runtime.id,\n        config.initialValues,\n        config.requires,\n        config.gmInfo,\n      ],\n    });\n  }\n\n  prepareScriptConfig(script) {\n    const scriptId =\n      script.id || script.name || `anonymous_script_${Date.now()}`;\n\n    const enabledApis = {\n      gmSetValue: Boolean(script.gmSetValue),\n      gmGetValue: Boolean(script.gmGetValue),\n      gmDeleteValue: Boolean(script.gmDeleteValue),\n      gmListValues: Boolean(script.gmListValues),\n      gmOpenInTab: Boolean(script.gmOpenInTab),\n      gmNotification: Boolean(script.gmNotification),\n      gmGetResourceText: Boolean(script.gmGetResourceText),\n      gmGetResourceURL: Boolean(script.gmGetResourceURL),\n      gmSetClipboard: Boolean(script.gmSetClipboard),\n      gmAddStyle: Boolean(script.gmAddStyle),\n      gmRegisterMenuCommand: Boolean(script.gmRegisterMenuCommand),\n      gmXmlHttpRequest: Boolean(script.gmXmlHttpRequest),\n    };\n\n    const resourceManager = ResourceManager.fromScript(script);\n\n    return {\n      code: script.code,\n      id: scriptId,\n      enabledApis,\n      resourceContents: Object.fromEntries(resourceManager.contents),\n      resourceURLs: Object.fromEntries(resourceManager.urls),\n      initialValues: script.initialValues || {},\n      requires: Array.isArray(script.requires) ? script.requires : [],\n      gmInfo: {\n        script: {\n          id: scriptId,\n          name: script.name,\n          version: script.version,\n          description: script.description,\n          author: script.author,\n          namespace: script.namespace || \"\",\n        },\n        scriptHandler: \"CodeTweak\",\n        version: chrome.runtime?.getManifest?.().version || \"\",\n      },\n    };\n  }\n\n  async injectScriptsForStage(details, runAt, getFilteredScripts) {\n    // Only inject in top frame\n    if (details.frameId !== 0) return;\n\n    try {\n      const { settings = {} } = await chrome.storage.local.get(\"settings\");\n      const { url, tabId } = details;\n\n      // Initialize or get executed scripts for this tab\n      if (!this.executedScripts.has(tabId)) {\n        this.executedScripts.set(tabId, new Set());\n      }\n      const tabScripts = this.executedScripts.get(tabId);\n\n      // Clear executed scripts on navigation start\n      if (runAt === INJECTION_TYPES.DOCUMENT_START) {\n        tabScripts.clear();\n      }\n\n      await this.injectMatchingScripts(\n        url,\n        runAt,\n        tabId,\n        tabScripts,\n        getFilteredScripts,\n        settings\n      );\n    } catch (error) {\n      console.error(\"CodeTweak: Script injection error:\", error);\n    }\n  }\n\n  async injectMatchingScripts(\n    url,\n    runAt,\n    tabId,\n    tabScripts,\n    getFilteredScripts,\n    settings\n  ) {\n    const matchingScripts = await getFilteredScripts(url, runAt);\n    const newScripts = matchingScripts.filter(\n      (script) => !tabScripts.has(script.id)\n    );\n\n    for (const script of newScripts) {\n      tabScripts.add(script.id); // Prevent race conditions\n      await this.injectScript(tabId, script, settings);\n    }\n  }\n\n  showNotification(tabId, scriptName) {\n    chrome.scripting\n      .executeScript({\n        target: { tabId },\n        world: EXECUTION_WORLDS.MAIN,\n        func: this.createNotificationFunction(),\n        args: [scriptName || \"Unknown script\"],\n      })\n      .catch((error) => {\n        console.warn(\"CodeTweak: showNotification failed:\", error);\n      });\n  }\n\n  createNotificationFunction() {\n    return function (scriptName) {\n      const notification = document.createElement(\"div\");\n      notification.textContent = `\u2713 ${scriptName}`;\n\n      Object.assign(notification.style, {\n        position: \"fixed\",\n        bottom: \"16px\",\n        right: \"16px\",\n        zIndex: \"999999\",\n        background: \"rgba(33, 150, 243, 0.95)\",\n        color: \"white\",\n        padding: \"6px 12px\",\n        borderRadius: \"8px\",\n        fontSize: \"12px\",\n        fontFamily: \"system-ui, sans-serif\",\n        pointerEvents: \"none\",\n        boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.2)\",\n      });\n\n      document.body.appendChild(notification);\n      setTimeout(() => notification.remove(), 2000);\n    };\n  }\n}\n\n// ==================================================\n// PUBLIC API\n// ==================================================\n\n// Create singleton instance\nconst scriptInjector = new ScriptInjector();\n\n// Legacy function compatibility\nexport async function injectScriptDirectly(tabId, script, settings) {\n  return scriptInjector.injectScript(tabId, script, settings);\n}\n\nexport async function injectScriptsForStage(\n  details,\n  runAt,\n  getFilteredScripts\n) {\n  return scriptInjector.injectScriptsForStage(\n    details,\n    runAt,\n    getFilteredScripts\n  );\n}\n\nexport function showNotification(tabId, scriptName) {\n  return scriptInjector.showNotification(tabId, scriptName);\n}\n\nexport { INJECTION_TYPES, EXECUTION_WORLDS };\n", "import { urlMatchesPattern } from \"./utils/urlMatchPattern.js\";\nimport { injectScriptsForStage, INJECTION_TYPES } from \"./utils/inject.js\";\n\n// State management\nclass BackgroundState {\n  constructor() {\n    this.scriptCache = null;\n    this.lastCacheUpdate = 0;\n    this.cacheTtl = 5000;\n    this.ports = new Set();\n    this.executedScripts = new Map();\n    this.creatingOffscreenDocument = null;\n  }\n\n  clearCache() {\n    this.scriptCache = null;\n    this.lastCacheUpdate = 0;\n  }\n\n  isCacheValid() {\n    return (\n      this.scriptCache && Date.now() - this.lastCacheUpdate <= this.cacheTtl\n    );\n  }\n}\n\nconst state = new BackgroundState();\nconst OFFSCREEN_DOCUMENT_PATH = \"offscreen.html\";\n\n// Utility functions\nfunction safeSetBadge(tabId, text = \"\", color = \"#007bff\") {\n  chrome.action.setBadgeText({ tabId, text }).catch((err) => {\n    if (!isIgnorableTabError(err)) {\n      console.warn(`Error setting badge for tab ${tabId}:`, err.message);\n    }\n  });\n\n  if (text) {\n    chrome.action.setBadgeBackgroundColor({ tabId, color }).catch(() => {});\n  }\n}\n\nfunction isIgnorableTabError(error) {\n  const ignorableMessages = [\n    \"No tab with id\",\n    \"Invalid tab ID\",\n    \"Receiving end does not exist\",\n  ];\n  return ignorableMessages.some((msg) => error.message?.includes(msg));\n}\n\nfunction notifyPorts(action) {\n  const disconnectedPorts = [];\n\n  for (const port of state.ports) {\n    try {\n      port.postMessage({ action });\n    } catch (error) {\n      console.warn(\"Failed to notify port:\", error);\n      disconnectedPorts.push(port);\n    }\n  }\n\n  disconnectedPorts.forEach((port) => state.ports.delete(port));\n}\n\n// Script management\nasync function getFilteredScripts(url, runAt = null) {\n  if (!state.isCacheValid()) {\n    await refreshScriptCache();\n  }\n\n  return state.scriptCache.filter(\n    (script) =>\n      script.enabled &&\n      (!runAt || script.runAt === runAt) &&\n      script.targetUrls.some((target) => urlMatchesPattern(url, target))\n  );\n}\n\nasync function refreshScriptCache() {\n  const { scripts = [] } = await chrome.storage.local.get(\"scripts\");\n\n  state.scriptCache = scripts.map((script) => ({\n    ...script,\n    id: script.id || crypto.randomUUID(),\n    targetUrls: script.targetUrls || [script.targetUrl].filter(Boolean),\n  }));\n\n  await chrome.storage.local.set({ scripts: state.scriptCache });\n  state.lastCacheUpdate = Date.now();\n}\n\nasync function updateBadgeForTab(tabId, url) {\n  if (!url?.startsWith(\"http\")) {\n    safeSetBadge(tabId);\n    return;\n  }\n\n  try {\n    const scriptsToRun = await getFilteredScripts(url);\n    const count = scriptsToRun.length;\n    safeSetBadge(tabId, count > 0 ? count.toString() : \"\");\n  } catch (error) {\n    console.error(`Error updating badge for tab ${tabId}:`, error);\n    safeSetBadge(tabId);\n  }\n}\n\nasync function updateAllTabBadges() {\n  const tabs = await chrome.tabs.query({});\n\n  tabs.forEach((tab) => {\n    if (tab.id) {\n      if (tab.url) {\n        updateBadgeForTab(tab.id, tab.url);\n      } else {\n        safeSetBadge(tab.id);\n      }\n    }\n  });\n}\n\n// GM API handlers\nconst gmApiHandlers = {\n  async setValue(message) {\n    await chrome.storage.local.set({ [message.name]: message.value });\n    return undefined;\n  },\n\n  async getValue(message) {\n    const data = await chrome.storage.local.get(message.name);\n    return data[message.name] === undefined\n      ? message.defaultValue\n      : data[message.name];\n  },\n\n  async deleteValue(message) {\n    await chrome.storage.local.remove(message.name);\n    return undefined;\n  },\n\n  async listValues() {\n    const allItems = await chrome.storage.local.get(null);\n    return Object.keys(allItems);\n  },\n\n  async openInTab(message) {\n    const tabOptions = { url: message.url };\n\n    if (message.options) {\n      if (typeof message.options.active === \"boolean\") {\n        tabOptions.active = message.options.active;\n      } else if (typeof message.options.loadInBackground === \"boolean\") {\n        tabOptions.active = !message.options.loadInBackground;\n      }\n    }\n\n    const newTab = await chrome.tabs.create(tabOptions);\n    return { id: newTab.id, url: newTab.url };\n  },\n\n  async notification(message) {\n    const options = {\n      type: message.details.image ? \"image\" : \"basic\",\n      iconUrl: chrome.runtime.getURL(\"icons/icon128.png\"),\n      title: message.details.title || \"Notification\",\n      message: message.details.text || \"\",\n    };\n\n    if (message.details.image) {\n      options.imageUrl = message.details.image;\n    }\n\n    const notificationId = `gm_notification_${Date.now()}`;\n    await chrome.notifications.create(notificationId, options);\n    return notificationId;\n  },\n\n  async setClipboard(message) {\n    return handleSetClipboard(message);\n  },\n\n  // Cross-origin XHR via fetch\n  async xmlHttpRequest(message) {\n    const details = message.details || {};\n\n    if (!details.url) {\n      throw new Error(\"GM_xmlHttpRequest: 'url' is required\");\n    }\n\n    const fetchInit = {\n      method: details.method || \"GET\",\n      headers: details.headers || {},\n      // Allow sending cookies for same-origin if desired\n      credentials: details.synchronous ? \"include\" : \"same-origin\",\n    };\n\n    // Request body\n    if (details.data !== undefined) {\n      if (details.binary && details.data instanceof Blob) {\n        fetchInit.body = details.data;\n      } else {\n        fetchInit.body = details.data;\n      }\n    }\n\n    // Timeout handling\n    let timeoutId;\n    const timeoutPromise =\n      details.timeout && details.timeout > 0\n        ? new Promise((_, reject) => {\n            timeoutId = setTimeout(() => {\n              reject(new Error(\"GM_xmlHttpRequest timed out\"));\n            }, details.timeout);\n          })\n        : null;\n\n    const fetchPromise = fetch(details.url, fetchInit).then(async (resp) => {\n      if (timeoutId) clearTimeout(timeoutId);\n\n      // Headers string\n      const headersArr = [];\n      for (const [key, value] of resp.headers.entries()) {\n        headersArr.push(`${key}: ${value}`);\n      }\n\n      // Select response based on responseType\n      let responseData;\n      switch (details.responseType) {\n        case \"arraybuffer\":\n          responseData = await resp.arrayBuffer();\n          break;\n        case \"blob\":\n          responseData = await resp.blob();\n          break;\n        case \"json\":\n          responseData = await resp.json();\n          break;\n        case \"text\":\n        case \"\":\n        default:\n          responseData = await resp.text();\n          break;\n      }\n\n      return {\n        readyState: 4,\n        responseHeaders: headersArr.join(\"\\r\\n\"),\n        responseText:\n          typeof responseData === \"string\" ? responseData : undefined,\n        response: responseData,\n        status: resp.status,\n        statusText: resp.statusText,\n        finalUrl: resp.url,\n        context: details.context,\n      };\n    });\n\n    return timeoutPromise ? Promise.race([fetchPromise, timeoutPromise]) : fetchPromise;\n  },\n};\n\nasync function handleGmApiRequest(message, sender, sendResponse) {\n  try {\n    console.log(\"[CodeTweak] GM_API request:\", message.action);\n\n    const handler = gmApiHandlers[message.action];\n    if (!handler) {\n      throw new Error(`Unknown GM_API action: ${message.action}`);\n    }\n\n    const result = await handler(message);\n    sendResponse({ result });\n  } catch (error) {\n    console.error(`Error handling GM_API action ${message.action}:`, error);\n    sendResponse({ error: error.message || \"An unexpected error occurred.\" });\n  }\n}\n\n// Clipboard handling\nasync function ensureOffscreenDocument() {\n  // Only Chromium supports getContexts/offscreen\n  const isChromium = !!chrome.runtime.getContexts && !!chrome.offscreen;\n  if (!isChromium) {\n    // Firefox: no offscreen support, just return\n    return;\n  }\n\n  if (state.creatingOffscreenDocument) {\n    await state.creatingOffscreenDocument;\n    return;\n  }\n\n  const contexts = await chrome.runtime.getContexts({\n    contextTypes: [\"OFFSCREEN_DOCUMENT\"],\n    documentUrls: [chrome.runtime.getURL(OFFSCREEN_DOCUMENT_PATH)],\n  });\n\n  if (contexts.length > 0) return;\n\n  state.creatingOffscreenDocument = chrome.offscreen.createDocument({\n    url: OFFSCREEN_DOCUMENT_PATH,\n    reasons: [\"CLIPBOARD\"],\n    justification: \"Need to write to the clipboard for GM_setClipboard API.\",\n  });\n\n  await state.creatingOffscreenDocument;\n  state.creatingOffscreenDocument = null;\n}\n\nasync function handleSetClipboard(request) {\n  // If offscreen is not supported (Firefox), use Clipboard API directly\n  const isChromium = !!chrome.runtime.getContexts && !!chrome.offscreen;\n  if (!isChromium && navigator.clipboard && window.isSecureContext) {\n    try {\n      await navigator.clipboard.writeText(request.data);\n      return;\n    } catch (e) {\n      throw new Error(\"Clipboard API failed: \" + e.message);\n    }\n  }\n\n  // Chromium/offscreen logic\n  await ensureOffscreenDocument();\n\n  const requestId = `clipboard-${Date.now()}-${Math.random()\n    .toString(36)\n    .substring(2, 10)}`;\n\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => {\n      chrome.runtime.onMessage.removeListener(listener);\n      reject(new Error(\"Timeout waiting for clipboard response.\"));\n    }, 5000);\n\n    const listener = (message) => {\n      if (\n        message.type === \"offscreen-clipboard-response\" &&\n        message.requestId === requestId\n      ) {\n        clearTimeout(timeout);\n        chrome.runtime.onMessage.removeListener(listener);\n\n        if (message.success) {\n          resolve(undefined);\n        } else {\n          reject(new Error(message.error || \"Failed to copy to clipboard.\"));\n        }\n      }\n    };\n\n    chrome.runtime.onMessage.addListener(listener);\n\n    chrome.runtime.sendMessage({\n      target: \"offscreen\",\n      type: \"copy-to-clipboard\",\n      data: request.data,\n      requestId,\n    });\n  });\n}\n\n// Script creation\nasync function handleScriptCreation(url, template) {\n  try {\n    const { scripts = [] } = await chrome.storage.local.get(\"scripts\");\n    const existing = scripts.find((s) =>\n      s.targetUrls?.some((t) => urlMatchesPattern(url, t))\n    );\n\n    if (existing) {\n      const lines = existing.code.split(\"\\n\");\n      let insertIndex = lines.length - 1;\n\n      // Find insertion point (skip empty lines and closing IIFE)\n      while (\n        insertIndex > 0 &&\n        (!lines[insertIndex].trim() || lines[insertIndex].trim() === \"})();\")\n      ) {\n        insertIndex--;\n      }\n\n      const newLines = [\n        \"\",\n        \"  // Added by element selector\",\n        ...template\n          .trim()\n          .split(\"\\n\")\n          .map((line) => \"  \" + line),\n        \"\",\n      ];\n\n      lines.splice(insertIndex + 1, 0, ...newLines);\n      existing.code = lines.join(\"\\n\");\n      existing.updatedAt = new Date().toISOString();\n\n      await chrome.storage.local.set({ scripts });\n      chrome.runtime.sendMessage({ action: \"scriptsUpdated\" });\n      chrome.tabs.create({\n        url: `${chrome.runtime.getURL(\"editor.html\")}?id=${existing.id}`,\n      });\n    } else {\n      const params = new URLSearchParams({ targetUrl: url, template });\n      chrome.tabs.create({\n        url: `${chrome.runtime.getURL(\"editor.html\")}?${params}`,\n      });\n    }\n  } catch (error) {\n    console.error(\"Script creation error:\", error);\n  }\n}\n\nasync function handleGreasyForkInstall(url) {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error(`HTTP error ${response.status}`);\n    const code = await response.text();\n\n    const tempId = crypto.randomUUID();\n    const key = `tempImport_${tempId}`;\n    await chrome.storage.local.set({ [key]: { code, sourceUrl: url } });\n\n    chrome.tabs.create({\n      url: `${chrome.runtime.getURL(\"editor.html\")}?importId=${tempId}`,\n    });\n  } catch (err) {\n    console.error(\"GreasyFork install fetch error:\", err);\n  }\n}\n\n// Message handling\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  console.log(\"[CodeTweak] Message received:\", message.type || message.action);\n\n  if (message.type === \"GM_API_REQUEST\") {\n    handleGmApiRequest(message.payload, sender, sendResponse);\n    return true; // Async response\n  }\n\n  if (message.type === \"offscreen-clipboard-response\") {\n    return false; // Handled by promise in handleSetClipboard\n  }\n\n  const messageHandlers = {\n    scriptsUpdated: () => {\n      state.clearCache();\n      notifyPorts(\"scriptsUpdated\");\n      updateAllTabBadges();\n      sendResponse({ success: true });\n    },\n\n    createScript: () => {\n      handleScriptCreation(message.data.url, message.data.template);\n    },\n\n    contentScriptReady: () => {\n      if (sender.tab?.id) {\n        state.executedScripts.set(sender.tab.id, new Set());\n      }\n    },\n\n    greasyForkInstall: () => {\n      handleGreasyForkInstall(message.url);\n    },\n  };\n\n  const handler = messageHandlers[message.action];\n  if (handler) {\n    handler();\n    return false;\n  }\n\n  sendResponse({ error: \"Unknown action\" });\n  return false;\n});\n\n// Context menu\nchrome.contextMenus.removeAll(() => {\n  chrome.contextMenus.create({\n    id: \"selectElement\",\n    title: \"Select Element for Script\",\n    contexts: [\"page\"],\n  });\n});\n\nchrome.contextMenus.onClicked.addListener((info, tab) => {\n  if (info.menuItemId === \"selectElement\") {\n    chrome.tabs.sendMessage(tab.id, { action: \"startSelection\" });\n  }\n});\n\n// Port connections\nchrome.runtime.onConnect.addListener((port) => {\n  if (port.name !== \"CodeTweak\" || state.ports.has(port)) return;\n\n  state.ports.add(port);\n  port.onDisconnect.addListener(() => state.ports.delete(port));\n  port.onMessage.addListener(console.log);\n});\n\n// Web navigation injection\nconst navigationEvents = [\"onCommitted\", \"onDOMContentLoaded\", \"onCompleted\"];\nnavigationEvents.forEach((event, index) => {\n  chrome.webNavigation[event].addListener((details) =>\n    injectScriptsForStage(\n      details,\n      Object.values(INJECTION_TYPES)[index],\n      getFilteredScripts,\n      state.executedScripts\n    )\n  );\n});\n\n// Tab event listeners\nchrome.tabs.onRemoved.addListener((tabId) =>\n  state.executedScripts.delete(tabId)\n);\n\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\n  if (changeInfo.status === \"complete\" && tab?.url) {\n    updateBadgeForTab(tabId, tab.url);\n  }\n});\n\nchrome.tabs.onActivated.addListener(async (activeInfo) => {\n  try {\n    const tab = await chrome.tabs.get(activeInfo.tabId);\n    updateBadgeForTab(tab.id, tab.url);\n  } catch (error) {\n    // Tab may have been closed\n    if (!isIgnorableTabError(error)) {\n      console.warn(\"Error getting activated tab:\", error);\n    }\n  }\n});\n\n// Extension lifecycle\nchrome.runtime.onInstalled.addListener(updateAllTabBadges);\nchrome.runtime.onStartup.addListener(updateAllTabBadges);\n"],
  "mappings": "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",
  "names": ["getFilteredScripts", "getFilteredScripts"]
}
